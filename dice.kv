#:kivy 1.4.1

<ScrollView>:
    bar_color: 0, .9, 0, .9
    bar_width: '6dp'
    canvas.after:
        Color:
            rgba: self.bar_color[:3] + [self.bar_color[3] * 1 if self.do_scroll_y else 0]
        Rectangle:
            pos: self.right - self.bar_width - self.bar_margin, self.y + self.height * self.vbar[0]
            size: self.bar_width, self.height * self.vbar[1]
        Color:
            rgba: self.bar_color[:3] + [self.bar_color[3] * 1 if self.do_scroll_x else 0]
        Rectangle:
            pos: self.x + self.width * self.hbar[0], self.y + self.bar_margin
            size: self.width * self.hbar[1], self.bar_width


<DiceHistory>
    canvas:
        Rectangle:
            pos: self.pos
            size: self.size
        
<DiceWidget>
    dice_eqn_input: dice_eqn_input
    dice_output: dice_output
    dice_history: dice_history
    roll_it_btn: roll_it_btn
    var_list_bubble: var_list_bubble
    num_spinner: num_spinner
    cur_fwd_btn: cur_fwd_btn
    cur_bk_btn: cur_bk_btn
    dice_io_width: .6
    bottom_reserve: .25
    
    canvas:
        Color:
            rgb: 0, 0, 0
        Rectangle:
            pos: root.pos
            size: root.size

    BoxLayout:
        size_hint: root.dice_io_width, 1.0 - root.bottom_reserve
        orientation: 'vertical'
        pos_hint: {'top':1}

        BoxLayout:
            orientation: 'horizontal'
            DiceEqnInput:
                id: dice_eqn_input
                #font_size: 14
                size_hint: .80, None
                height: self.line_height * 1.65
                multiline: False
                text: self.start_text
                on_focus: if self.text==self.start_text: self.text=""
                on_text_validate: root.roll_it()
                true_parent: root

            Button:
                id: cur_bk_btn
                text: "<"
                size_hint: .1, None
                height: dice_eqn_input.height
                on_press: dice_eqn_input.cursor_back()

            Button:
                id: cur_fwd_btn
                text: ">"
                size_hint: .1, None
                height: dice_eqn_input.height
                on_press: dice_eqn_input.cursor_forward()

        BoxLayout:
            orientation: 'horizontal'
            
            Button:
                id: roll_it_btn
                size_hint: .85, None
                height: dice_eqn_input.height
                text: "Roll It!"
                on_parent: root.log_mesg('mobile: ' + str(root.mobile))
                on_press: root.roll_it()

            Button:
                text: "Clear"
                size_hint: .15, None
                height: dice_eqn_input.height
                on_press: dice_eqn_input.text = ''

        RelativeLayout:
            size_hint: 1, None
            height: self.parent.height - dice_eqn_input.height - roll_it_btn.height
            on_parent: root.log_mesg('output/spinner floatlayout pos: ' + str(self.pos))
            on_parent: root.log_mesg('output/spinner floatlayout size: ' + str(self.size))
            
            ScrollView:
                id: dice_out_scroll
                size_hint: 1, 1
                scroll_timeout: 1000
                do_scroll_x: False
                on_parent: root.log_mesg('dice output scroll size ' + repr(dice_out_scroll.size))
            
                TextInput:
                    id: dice_output
                    #font_size: 14
                    readonly: True
                    size_hint: None, None
                    size: dice_out_scroll.width, max( (len(self._lines)+1) * (self.line_height + self._line_spacing), dice_out_scroll.height)
                    pos: 0, 0
                    text: "Don't know what's going on?\nType \"help\" above, and click \"Roll It!\" or press enter."
                    on_parent: self.bind(focus=root.hide_vkbd)
                    on_parent: root.log_mesg('created dice output')

            AnchorLayout:
                pos: dice_out_scroll.pos
                size: dice_out_scroll.size
                anchor_x: 'right'
                anchor_y: 'top'

                Spinner:
                    id: num_spinner
                    text: '1'
                    values: [str(val) for val in range(0, 100)]
                    size_hint: .15, None
                    height: dice_eqn_input.height
                    on_parent: self.dropdown_cls.scroll_timeout = 250
                    on_parent: self.bind(is_open=dice_eqn_input.add_at_cursor)

    Accordion:
        orientation: 'vertical'
        size_hint: 1.0 - root.dice_io_width, 1.0 - root.bottom_reserve
        size: root.width-(root.dice_io_width+1), root.bottom_reserve
        pos_hint: {'x':.60, 'top':1}

        AccordionItem:
            title: "Common Operations"
            collapse: False
            ScrollView:
                scroll_timeout: 250
                do_scroll_x: False
                AnchorLayout:
                    anchor_x: 'center'
                    anchor_y: 'top'
                    size_hint_y: None
                    Bubble:
                        size_hint: None, None
                        width: self.parent.width*0.9
                        height: dice_eqn_input.height * 8
                        arrow_pos: 'left_mid'
                        orientation: 'vertical'
                        BubbleButton:
                            text: "Separarated rolls {NxMdY}"
                            on_press: root.sep_rolls_add()
                        BubbleButton:
                            text: "Another roll ;"
                            on_press: dice_eqn_input.text += ';'
                        BubbleButton:
                            text: "Named roll:"
                            on_press: root.named_roll_add()
                        BubbleButton:
                            text: "Add +"
                            on_press: dice_eqn_input.text += ' + '
                        BubbleButton:
                            text: "Subtract -"
                            on_press: dice_eqn_input.text += ' - '
                        BubbleButton:
                            text: "Multiply *"
                            on_press: dice_eqn_input.text += ' * '
                        BubbleButton:
                            text: "Division /"
                            on_press: dice_eqn_input.text += ' / '
                        BubbleButton:
                            text: "Help"
                            on_press: dice_eqn_input.text = 'help' if dice_eqn_input.is_empty() else dice_eqn_input.text

        AccordionItem:
            title: "History"
            collapse: True
            ScrollView:
                scroll_timeout: 250
                do_scroll_x: False
                AnchorLayout:
                    anchor_x: 'center'
                    anchor_y: 'top'
                    size_hint_y: None
                    Bubble:
                        id: dice_history
                        size_hint: (None, None)
                        width: self.parent.width*0.9
                        on_parent: self.height=dice_eqn_input.height
                        arrow_pos: 'left_mid'
                        orientation: 'vertical'

        AccordionItem:
            title: "Named Equations"
            collapse: True
            ScrollView:
                scroll_timeout: 250
                do_scroll_x: False
                AnchorLayout:
                    anchor_x: 'center'
                    anchor_y: 'top'
                    size_hint_y: None
                    Bubble:
                        id: var_list_bubble
                        size_hint: None, None
                        width: self.parent.width*0.9
                        on_parent: self.height=dice_eqn_input.height
                        arrow_pos: 'left_mid'
                        orientation: 'vertical'

    ScrollView:
        id: dice_pic_scroll
        size_hint: 1, root.bottom_reserve
        scroll_timeout: 250
        pos: 0, 0
        do_scroll_y: False
        on_parent: root.log_mesg('dice pics scroll view size ' + repr(self.size))

        BoxLayout:
            pic_size_hint: None, 1
            #on_parent: root.log_mesg('init dice pics box size ' + repr(self.size))
            #on_size: root.log_mesg('dice pics box size ' + repr(self.size))
            size_hint: (None, None)
            size: d4.width*6+d100.width, self.parent.height
            orientation: 'horizontal'

            Image:
                id: d4
                source: 'd4.png'
                size_hint: self.parent.pic_size_hint
                height: self.parent.height
                width: self.height
                allow_stretch: True
                on_parent: root.log_mesg('d4 image size ' + repr(self.size))
                on_parent: root.dice_images.append(self)
                on_parent: root.set_bind(self, 'd4')
                    
            Image:
                source: 'd6.png'
                size_hint: self.parent.pic_size_hint
                height: d4.height
                width: d4.width
                allow_stretch: True
                on_parent: root.dice_images.append(self)
                on_parent: root.set_bind(self, 'd6')
                
            Image:
                source: 'd8.png'
                size_hint: self.parent.pic_size_hint
                height: d4.height
                width: d4.width
                allow_stretch: True
                on_parent: root.dice_images.append(self)
                on_parent: root.set_bind(self, 'd8')
                    
            Image:
                source: 'd10.png'
                size_hint: self.parent.pic_size_hint
                height: d4.height
                width: d4.width
                allow_stretch: True
                on_parent: root.dice_images.append(self)
                on_parent: root.set_bind(self, 'd10')
                    
            Image:
                source: 'd12.png'
                size_hint: self.parent.pic_size_hint
                height: d4.height
                width: d4.width
                allow_stretch: True
                on_parent: root.dice_images.append(self)
                on_parent: root.set_bind(self, 'd12')
                    
            Image:
                source: 'd20.png'
                size_hint: self.parent.pic_size_hint
                height: d4.height
                width: d4.width
                allow_stretch: True
                on_parent: root.dice_images.append(self)
                on_parent: root.set_bind(self, 'd20')
                    
            Image:
                id: d100
                source: 'd100.png'
                size_hint: self.parent.pic_size_hint
                height: d4.height
                width: d4.width*1.4969
                allow_stretch: True
                on_parent: root.log_mesg('d100 image size ' + repr(self.size))
                on_parent: root.dice_images.append(self)
                on_parent: root.set_bind(self, 'd100')
